{"version":3,"sources":["Component/Menu.js","Component/math.js","Component/Preview.js","Component/Editor.js","Component/Main.js","index.js"],"names":["Menu","props","onChange","className","onClick","defalutProps","window","MathJax","tex","inlineMath","displayMath","processEscapes","options","skipHtmlTags","ignoreHtmlClass","processHtmlClass","md","MarkdownIt","html","xhtmlOut","breaks","langPrefix","linkify","typographer","quotes","use","tocPlugin","includeLevel","markerPattern","Preview","useState","math","setMath","source","previewRef","useRef","useEffect","startup","elements","current","getComponents","innerHTML","render","typeset","ref","Editor","editorRef","flag","value","tool","mdEditor","editor","create","language","wordWrap","fontSize","theme","minimap","enabled","mdModel","getModel","onDidChangeContent","str","getValue","handleResize","layout","getBoundingClientRect","addEventListener","removeEventListener","defaultProps","onCursorChange","Main","setSource","setTool","setFlag","newTool","console","log","newSource","ReactDOM","document","getElementById"],"mappings":"kKAIA,SAASA,EAAKC,GAAO,IACVC,EAAYD,EAAZC,SAEP,OACE,yBAAKC,UAAU,QACX,4BACI,wBAAIC,QAAS,kBAAMF,EAAS,OAA5B,OAMdF,EAAKK,aAAe,CAChBH,SAAU,cAGCF,Q,kCCpBfM,OAAOC,QAAU,CACbC,IAAK,CACDC,WAAY,CACR,CAAC,IAAK,KACN,CAAC,MAAO,OACR,CAAC,IAAK,MAEVC,YAAa,CACT,CAAC,IAAK,KACN,CAAC,MAAO,QAEZC,gBAAgB,GAEpBC,QAAS,CACLC,aAAc,CAAC,SAAU,WAAY,QAAS,WAAY,MAAO,OAAQ,KACzEC,gBAAiB,SACjBC,iBAAkB,oBAIXT,OAAf,Q,OAAeA,ICZTU,EAAK,IAAIC,IAAW,CACtBC,MAAM,EACNC,UAAU,EACVC,QAAQ,EACRC,WAAY,YACZC,SAAS,EACTC,aAAa,EACbC,OAAQ,6BAEZR,EAAGS,IAAIC,IAAW,CAAEC,aAAc,CAAC,EAAG,GAAIC,cAAe,eAsB1CC,MApBf,SAAiB5B,GAAO,IAAD,EACI6B,mBAAS,MADb,mBACZC,EADY,KACPC,EADO,KAEXC,EAAWhC,EAAXgC,OACFC,EAAaC,iBAAO,MAY1B,OAVAC,qBAAU,WACFL,IACAzB,OAAOC,QAAQ8B,QAAQC,SAAWJ,EAAWK,QAC7CjC,OAAOC,QAAQ8B,QAAQG,gBACvBR,GAAQ,IAEZE,EAAWK,QAAQE,UAAYzB,EAAG0B,OAAOT,GAAU,IACnD3B,OAAOC,QAAQoC,YACjB,CAACV,EAAOF,IAGN,yBAAK5B,UAAU,UAAUyC,IAAKV,K,OC3BtC,SAASW,EAAO5C,GACZ,IAAM6C,EAAYX,iBAAO,MADP,EAEKL,mBAAS,GAFd,mBAGViB,GAHU,UAGmB9C,EAA7B8C,MAAUC,GAAmB/C,EAAxBgD,KAAwBhD,EAAnB+C,OAAM9C,EAAaD,EAAbC,SAkCxB,OA/BAkC,qBAAU,WACP,IAAMc,EAAWC,IAAOC,OAAON,EAAUP,QAAQ,CAC7CS,MAAOA,EACPK,SAAU,WACVC,SAAS,KACTC,SAAS,GACTC,MAAO,UACPC,QAAQ,CACJC,SAAQ,KAKVC,EAAUT,EAASU,WACzBD,EAAQE,oBAAmB,WACvB,IAAIC,EAAMH,EAAQI,WAClB7D,EAAS4D,MAIb,IAAME,EAAe,kBAAMd,EAASe,OAAOnB,EAAUP,QAAQ2B,0BAE7D,OADA5D,OAAO6D,iBAAiB,SAASH,GAC1B,WACH1D,OAAO8D,oBAAoB,SAASJ,MAIzC,CAACjB,EAAKC,EAAM9C,IAKZ,yBAAKC,UAAU,SAASyC,IAAKE,IAInCD,EAAOwB,aAAe,CAClBrB,MAAM,GACN9C,SAAS,aACToE,eAAe,cAGJzB,QCtBA0B,MA1Bf,WAAgB,IAAD,EACgBzC,mBAAS,IADzB,mBACJG,EADI,KACGuC,EADH,OAEY1C,mBAAS,IAFrB,mBAEJmB,EAFI,KAECwB,EAFD,OAGY3C,mBAAS,GAHrB,mBAGJiB,EAHI,KAGC2B,EAHD,KAiBX,OACI,yBAAKvE,UAAU,QACX,kBAAC,EAAD,CAAMD,SAVd,SAA0ByE,GACtBF,EAAQE,GACRC,QAAQC,IAAI5B,GACZyB,EAAQ3B,EAAK,MAQT,kBAAC,EAAD,CAAQA,KAAQA,EAAME,KAAQA,EAAMD,MAAOf,EAAQ/B,SAf3D,SAA4B4E,GACxBN,EAAUM,MAeN,kBAAC,EAAD,CAAS7C,OAAUA,MCxB/B8C,IAASrC,OACL,kBAAC,EAAD,MACAsC,SAASC,eAAe,U","file":"static/js/main.96b65265.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"../Style/Main.css\"\r\n\r\nfunction Menu(props){\r\n    const {onChange} = props;\r\n\r\n    return(\r\n      <div className=\"menu\">\r\n          <ul>\r\n              <li onClick={() => onChange(\"#\")}>h</li>\r\n          </ul>\r\n      </div>\r\n    );\r\n}\r\n\r\nMenu.defalutProps = {\r\n    onChange: ()=>{}\r\n}\r\n\r\nexport default Menu;","window.MathJax = {\r\n    tex: {\r\n        inlineMath: [\r\n            [\"$\", \"$\"],\r\n            [\"\\\\(\", \"\\\\)\"],\r\n            [\"?\", \"?\"]\r\n        ],\r\n        displayMath: [\r\n            [\"?\", \"?\"],\r\n            [\"\\\\[\", \"\\\\]\"]\r\n        ],\r\n        processEscapes: true\r\n    },\r\n    options: {\r\n        skipHtmlTags: [\"script\", \"noscript\", \"style\", \"textarea\", \"pre\", \"code\", \"a\"],\r\n        ignoreHtmlClass: \"editor\",\r\n        processHtmlClass: 'tex2jax_process'\r\n    }\r\n};\r\n\r\nexport default window.MathJax;","import React,{useState,useRef,useEffect} from \"react\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport tocPlugin from \"markdown-it-table-of-contents\";\r\nimport \"./math\";\r\nimport \"mathjax/es5/tex-svg\"\r\n\r\nimport \"../Style/Main.css\"\r\n\r\nconst md = new MarkdownIt({\r\n    html: false,\r\n    xhtmlOut: false,\r\n    breaks: false,\r\n    langPrefix: \"language-\",\r\n    linkify: true,\r\n    typographer: false,\r\n    quotes: \"“”‘’\"\r\n});\r\nmd.use(tocPlugin, { includeLevel: [2, 3], markerPattern: /^\\[toc\\]/im });\r\n\r\nfunction Preview(props){\r\n    const [math,setMath] = useState(null);\r\n    const { source } = props;\r\n    const previewRef = useRef(null);\r\n\r\n    useEffect(()=>{\r\n        if(!math){\r\n            window.MathJax.startup.elements = previewRef.current;\r\n            window.MathJax.startup.getComponents();\r\n            setMath(true);\r\n        }\r\n        previewRef.current.innerHTML = md.render(source || \"\");\r\n        window.MathJax.typeset();\r\n    },[source,math]);\r\n\r\n    return(\r\n        <div className=\"preview\" ref={previewRef}/>\r\n    );\r\n}\r\n\r\nexport default Preview;","import React,{ useState,useRef,useEffect } from 'react';\r\nimport {editor} from 'monaco-editor';\r\n\r\nimport { debounce } from 'lodash';\r\n\r\nimport \"../Style/Main.css\";\r\nimport useWidth from \"./hooks/useWidth\";\r\n\r\nfunction Editor(props){\r\n    const editorRef = useRef(null);\r\n    const [count,setCount]=useState(0);\r\n    const { flag,tool,value,onChange } = props;\r\n\r\n\r\n    useEffect(()=>{\r\n       const mdEditor = editor.create(editorRef.current,{\r\n           value: value,\r\n           language: \"markdown\",\r\n           wordWrap:\"on\",\r\n           fontSize:20,\r\n           theme: \"vs-dark\",\r\n           minimap:{\r\n               enabled:false\r\n           }\r\n\r\n       });\r\n\r\n       const mdModel = mdEditor.getModel();\r\n       mdModel.onDidChangeContent(() => {\r\n           let str = mdModel.getValue();\r\n           onChange(str);\r\n       });\r\n\r\n\r\n       const handleResize = () => mdEditor.layout(editorRef.current.getBoundingClientRect());\r\n       window.addEventListener('resize',handleResize);\r\n       return ()=>{\r\n           window.removeEventListener('resize',handleResize);\r\n       }\r\n\r\n\r\n    },[flag,value,onChange]);\r\n\r\n\r\n\r\n    return(\r\n      <div className=\"editor\" ref={editorRef}/>\r\n    );\r\n}\r\n\r\nEditor.defaultProps = {\r\n    value:'',\r\n    onChange:() => { },\r\n    onCursorChange:() => { }\r\n};\r\n\r\nexport default Editor;","import React ,{useState} from 'react';\r\nimport { editor } from 'monaco-editor';\r\n\r\nimport Menu from './Menu';\r\nimport Preview from './Preview';\r\nimport Editor from './Editor';\r\nimport \"../Style/Main.css\";\r\n\r\nfunction Main(){\r\n    const [source,setSource] = useState('');\r\n    const [tool,setTool] = useState('');\r\n    const [flag,setFlag] = useState(0);\r\n\r\n    function handleSourceChange(newSource){\r\n        setSource(newSource);\r\n    }\r\n\r\n    function handleToolChange(newTool){\r\n        setTool(newTool);\r\n        console.log(tool);\r\n        setFlag(flag+1);\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"main\">\r\n            <Menu onChange={handleToolChange}/>\r\n            <Editor flag = {flag} tool = {tool} value={source} onChange = {handleSourceChange} />\r\n            <Preview source = {source} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Main from \"./Component/Main\";\r\n\r\nReactDOM.render(\r\n    <Main/>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}