{"version":3,"sources":["App.js","index.js"],"names":["marked","setOptions","highlight","code","highlightAuto","value","App","useState","setValue","scale","setScale","listen","setListen","heights","setHeights","refLeft","useRef","refRight","refEditor","refPreview","setListenValue","v","onScreenScroll","r","document","querySelector","l","edi","pre","offsetHeight","scrollTop","console","log","insertHtml","html","sel","range","window","getSelection","getRangeAt","rangeCount","deleteContents","el","createElement","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","appendChild","insertNode","cloneRange","setStartAfter","collapse","removeAllRanges","addRange","useEffect","documentElement","clientHeight","title","Item","onClick","boldFont","className","overlay","placement","arrow","style","height","ref","onMouseOver","onScroll","contentEditable","id","onInput","e","target","innerText","dangerouslySetInnerHTML","__html","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3e61e720.chunk.js","sourcesContent":["import React,{useState,useRef,useEffect} from 'react';\r\nimport marked from 'marked';\r\nimport highlight from'highlight.js'\r\nimport {Button,Menu,Dropdown} from \"antd\";\r\n\r\nimport Tool from './Tool';\r\nimport Editor from \"./Editor\";\r\nimport Preview from \"./Preview\";\r\nimport './App.css';\r\nimport 'antd/dist/antd.css'\r\n\r\nmarked.setOptions({\r\n    highlight (code) {\r\n        return highlight.highlightAuto(code).value\r\n    }\r\n})\r\n\r\nfunction App(){\r\n    const [value,setValue] = useState('');\r\n    const [scale,setScale] = useState(0);\r\n    const [listen,setListen] = useState(0);\r\n    const [heights,setHeights] = useState(0);\r\n    const refLeft = useRef(null);\r\n    const refRight = useRef(null);\r\n    const refEditor = useRef(null);\r\n    const refPreview = useRef(null);\r\n\r\n    useEffect(()=>{\r\n        setHeights(document.documentElement.clientHeight - document.querySelector('.edit-header').offsetHeight- 300 + 'px');\r\n    },[heights]);\r\n\r\n    function onEditorChange(e){\r\n\r\n        setValue(marked(e.target.innerText));\r\n\r\n    }\r\n\r\n    function setListenValue(v){\r\n        setListen(v);\r\n    }\r\n\r\n    function onScreenScroll(){\r\n        const r = document.querySelector('.right');\r\n        const l = document.querySelector('.left');\r\n        const edi = document.querySelector('.Editor');\r\n        const pre = document.querySelector('.Preview');\r\n        setScale((r.offsetHeight - pre.offsetHeight) / (l.offsetHeight - edi.offsetHeight));\r\n\r\n        if(listen === 1){\r\n            pre.scrollTop = edi.scrollTop * scale;\r\n        }else{\r\n            edi.scrollTop = pre.scrollTop / scale;\r\n        }\r\n\r\n        console.log(scale);\r\n    }\r\n\r\n    function onClickTool(v){\r\n        document.getElementById('left').focus();\r\n        insertHtml(v);\r\n    }\r\n\r\n\r\n    function insertHtml(html) {\r\n\r\n\r\n        let sel, range;\r\n        if (window.getSelection) {\r\n            // IE9 或 非IE浏览器\r\n            sel = window.getSelection();\r\n            if (sel.getRangeAt && sel.rangeCount) {\r\n                range = sel.getRangeAt(0);\r\n                range.deleteContents();\r\n                // Range.createContextualFragment() would be useful here but is\r\n                // non-standard and not supported in all browsers (IE9, for one)\r\n                let el = document.createElement(\"div\");\r\n                el.innerHTML = html;\r\n                let frag = document.createDocumentFragment(),\r\n                    node, lastNode;\r\n                while ((node = el.firstChild)) {\r\n                    lastNode = frag.appendChild(node);\r\n                }\r\n                range.insertNode(frag);\r\n                // Preserve the selection\r\n                if (lastNode) {\r\n                    range = range.cloneRange();\r\n                    range.setStartAfter(lastNode);\r\n                    range.collapse(true);\r\n                    sel.removeAllRanges();\r\n                    sel.addRange(range);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const title = (\r\n        <Menu>\r\n            <Menu.Item>\r\n                <Button onClick={()=>insertHtml('# ')}>h1</Button>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n                <Button onClick={()=>insertHtml('## ')}>h2</Button>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n                <Button onClick={()=>insertHtml('### ')}>h3</Button>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n                <Button onClick={()=>insertHtml('#### ')}>h4</Button>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n                <Button onClick={()=>insertHtml('##### ')}>h5</Button>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n                <Button onClick={()=>insertHtml('###### ')}>h6</Button>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n    const boldFont = (\r\n        <Menu>\r\n            <Menu.Item>\r\n                <Button onClick={()=>insertHtml('*斜体*')}>斜体</Button>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n                <Button onClick={()=>insertHtml('**粗体**')}>粗体</Button>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n                <Button onClick={()=>insertHtml('***粗斜体***')}>粗斜体</Button>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n\r\n    return(\r\n        <div className=\"App\">\r\n            <div className=\"edit-header\">\r\n                <div className=\"title-input\">\r\n                    <Dropdown overlay = {title} placement=\"bottomLeft\" arrow>\r\n                        <Button>标题</Button>\r\n                    </Dropdown>\r\n                    <Button onClick={()=>insertHtml('- ')}>无序列表</Button>\r\n                    <Button onClick={()=>insertHtml('> ')}>引用块</Button>\r\n                    <Dropdown overlay = {boldFont} placement = \"bottomLeft\" arrow>\r\n                        <Button>粗/斜体</Button>\r\n                    </Dropdown>\r\n                    <Button onClick={()=>insertHtml('[]()')}>链接</Button>\r\n                    <Button onClick={()=>insertHtml('![]()')}>图片</Button>\r\n                </div>\r\n            </div>\r\n            <div className=\"editor-main-a\" style={{height:heights}}>\r\n                <div className=\"Editor common-container\" ref={refEditor} onMouseOver={()=>setListenValue(1)} onScroll={onScreenScroll}>\r\n                    <div contentEditable=\"plaintext-only\" id=\"left\" className=\"left common-wrapper\" onInput={onEditorChange} ref={refLeft}/>\r\n                </div>\r\n                <div className=\"Preview common-container\" ref={refPreview} onMouseOver={()=>setListenValue(2)} onScroll={onScreenScroll}>\r\n                    <div className=\"markdown-body right common-wrapper\" dangerouslySetInnerHTML={{__html: value}} ref={refRight}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App.js';\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}